import requests
import os
from typing import List, Dict, Union
from models.data_models import InstagramProfile, InstagramPost
from datetime import datetime

class InstagramScraperService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Instagram —á–µ—Ä–µ–∑ Apify API"""

    def __init__(self):
        self.apify_token = os.getenv('APIFY_TOKEN')
        self.base_url = "https://api.apify.com/v2/acts/apify~instagram-scraper/run-sync-get-dataset-items"

    def fetch_posts(self, usernames: Union[str, List[str]], limit: int = 10) -> List[Dict]:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ Apify Instagram Scraper

        Args:
            usernames: username (str) –∏–ª–∏ —Å–ø–∏—Å–æ–∫ username (List[str])
            limit: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤

        Returns:
            –°–ø–∏—Å–æ–∫ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
        """
        if isinstance(usernames, str):
            usernames = [usernames]

        # –§–æ—Ä–º–∏—Ä—É–µ–º URL –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è Apify
        target_urls = [f"https://www.instagram.com/{username.strip().lstrip('@')}/" for username in usernames]

        headers = {'Content-Type': 'application/json'}

        payload = {
            'directUrls': target_urls,
            'resultsType': 'posts',
            'resultsLimit': limit
        }

        params = {'token': self.apify_token}

        try:
            print(f"üì• –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Apify –¥–ª—è {len(target_urls)} –ø—Ä–æ—Ñ–∏–ª–µ–π: {target_urls}")
            response = requests.post(
                self.base_url,
                json=payload,
                headers=headers,
                params=params,
                timeout=300
            )
            response.raise_for_status()
            data = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(data)} –ø–æ—Å—Ç–æ–≤ –æ—Ç Apify")
            return data

        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Apify: {e}")
            return []

    def parse_profile_data(self, raw_data: Dict) -> InstagramProfile:
        """–ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö Apify"""
        return InstagramProfile(
            username=raw_data.get('username', ''),
            followers=raw_data.get('followersCount', 0)
        )

    def parse_post_data(self, raw_data: Dict, profile_id: int) -> InstagramPost:
        """–ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞ –∏–∑ —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö Apify"""
        timestamp = None
        if raw_data.get('timestamp'):
            try:
                timestamp = datetime.fromisoformat(
                    raw_data['timestamp'].replace('Z', '+00:00')
                )
            except Exception:
                timestamp = datetime.now()

        return InstagramPost(
            profile_id=profile_id,
            display_url=raw_data.get('displayUrl', ''),
            caption=raw_data.get('caption', ''),
            timestamp=timestamp
        )

